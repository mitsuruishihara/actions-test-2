name: TerraformApply
on:
  pull_request:
    branches:
    - master
    types: [closed]

jobs:
  apply:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.pull_request.merged == true
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_APP_KEY: ${{ secrets.DATADOG_APP_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set env to sand
        continue-on-error: true
        if: contains(github.base_ref, 'master')
        run: |
          echo "TERRAFORM_WORKSPACE=sand" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=278109369713" >> $GITHUB_ENV
          #echo "TFSATTE_BUCKET_NAME=sand-nst-tfstate" >> $GITHUB_ENV
          #echo "SLACK_CHANNEL_ID=nst-cicd-notify-sand" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        continue-on-error: true
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ci-terraform
          role-session-name: ci-terraform

      - name: Setup tfnotify
        continue-on-error: true
        run: |
          sudo curl -fL -o tfnotify.tar.gz https://github.com/mercari/tfnotify/releases/download/v0.7.0/tfnotify_linux_amd64.tar.gz
          sudo tar -C /usr/bin -xzf ./tfnotify.tar.gz

      - name: Terraform Setup
        continue-on-error: true
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.6

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: Terraform Init
        continue-on-error: true
        id: init
        run: terraform init -backend-config="bucket=${{ env.TFSATTE_BUCKET_NAME }}"
        env:
          GIT_SSH_COMMAND: "echo '${{ secrets.GH_DJT_TERRAFORM_MODULES_SSH_PRIVATE_KEY }}' > id_rsa
            && ssh-keyscan github.com > known_hosts
            && chmod 600 id_rsa known_hosts
            && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"

      - name: Terraform Workspace Select
        continue-on-error: true
        id: select
        run: terraform workspace select ${{ env.TERRAFORM_WORKSPACE }}

      - name: Terraform Validate
        continue-on-error: true
        id: validate
        run: terraform validate -no-color

      - name: TFLint
        continue-on-error: true
        uses: reviewdog/action-tflint@v1.17.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_on_error: false
          filter_mode: "nofilter"
          tflint_rulesets: "aws"
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        continue-on-error: true
        id: apply
        run: |
          terraform apply -var-file env/${{ env.TERRAFORM_WORKSPACE }}.tfvars -auto-approve >> apply_result.temp
          cat apply_result.temp | tfnotify --config ../.tfnotify/slack.yml apply --message "$(date)"
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL_ID: ${{ env.SLACK_CHANNEL_ID }}
          SLACK_BOT_NAME: tfnotify

  pr-release:
    runs-on: ubuntu-latest
    #needs: apply
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      repository-projects: read
    if: contains(github.base_ref, 'master') && !endsWith(github.head_ref, '-ug')
    steps:
      - name: Checkout
        continue-on-error: true
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Generate Token
      #   id: generate_token
      #   uses: tibdex/github-app-token@v1
      #   with:
      #     app_id: ${{ secrets.GHA_APP_ID }}
      #     private_key: ${{ secrets.GHA_PRIVATE_KEY }}
      #     # Optional (defaults to ID of the repository's installation).
      #     # installation_id: 1337
      #     # Optional (defaults to the current repository).
      #     # repository: "owner/repo"

      - name: git-pr-release master to main
        continue-on-error: true
        # 末尾が*-ugのブランチは git-pr-releaseに含めない
        uses: bakunyo/git-pr-release-action@v1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: main
          GIT_PR_RELEASE_BRANCH_STAGING: master
          GIT_PR_RELEASE_LABELS: stag/prod-release
          GIT_PR_RELEASE_TEMPLATE: .git-pr-release-template
